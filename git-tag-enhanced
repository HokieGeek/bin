#!/bin/bash

askYN() {
    read -p "$@ [yN]: " -N 1 answer
    [[ -n "${answer}" ]] && echo ""
    [[ ${answer} =~ [yY] ]] && return 0 || return 1
}

delimeter="-"
if [[ $# == 2 && $1 =~ -m|F ]] || (( $# == 0 )); then
    latest=$(git describe 2>/dev/null | awk -F- '{ printf("%s%s%s\n", $1, FS, $2) }')
    [[ -n "${latest}" ]] && {
        release=${latest##*${delimeter}}
        oldIFS=$IFS; IFS="."; read major minor patch <<<"${latest%${delimeter}*}"; IFS=$oldIFS; unset oldIFS

        while
            waiting=false
            read -p "What type of update is this? [major.minor.patch-release]: " updateType

            (( ${#updateType} > 1 )) && updateType=${updateType,,}

            case ${updateType} in
            M|maj|major)
                (( major++ ))
                minor=0
                patch=0
                release=1
                ;;
            m|min|minor)
                (( minor++ ))
                patch=0
                release=1
                ;;
            p|patch)
                (( patch++ ))
                release=1
                ;;
            r|rel|release)
                (( release++ ))
                ;;
            *) waiting=true ;;
            esac

            $waiting
        do
            :
        done

        printf -v newTag "%d.%d.%d-%d" ${major} ${minor} ${patch} ${release}
    } || {
        askYN "Could not find a previous tag. Build a new one?" \
            && newTag="1.0.0-1" \
            || exec git tag $@
    }

    [[ -n "${newTag}" ]] && askYN "Create new tag '${newTag}'?" && {
        git tag -a ${newTag} $* && git cat-file tag ${newTag}
    }
else
    exec git tag $*
fi
